# ---------------------------------------------------- KEY BINDINGS

# -------------------------------------- SESSION LIST
#   Faster than the built-in `prefix + s` prompt for long session lists.
# - `prefix + C` (shift + c) - prompt for creating a new session by name.
# - `prefix + X` (shift + x) - kill current session without detaching tmux.
# - `prefix + S` (shift + s) - switches to the last session.<br/>
#   The same as built-in `prefix + L` that everyone seems to override with
#   some other binding.
# - `prefix + @` - promote current pane into a new session.<br/>
#   Analogous to how `prefix + !` breaks current pane to a new window.
# - `prefix + ctrl-@` - promote current window into a new session.
# - `prefix + t<secondary-key>` - join currently marked pane (`prefix + m`) to current session/window, and switch to it
#   - secondary-keys
#     - `h`, `-`, `"`: join horizontally
#     - `v`, `|`, `%`: join vertically
#     - `f`, `@`: join full screen
#

# -------------------------------------- COPY PASTE
# -   Normal Mode
#     -   prefix y — copies text from the command line to the clipboard.
#     -   prefix Y — copy the current pane's current working directory to the clipboard.
#
# -   Copy Mode
#     -   y — copy selection to system clipboard.
#     -   Y — "put" selection. Equivalent to copying a selection, and pasting it to the command line.
#

set-option -sa terminal-overrides ",xterm*:Tc"
set-window-option -g xterm-keys on
set-window-option -g mode-keys vi
# Address vim mode switching delay (http://superuser.com/a/252717/65504)
set -g escape-time 0

# Increase scrollback buffer size from 2000 to 50000 lines
set -g history-limit 20000

# Increase tmux messages display duration from 750ms to 4s
set -g display-time 4000

# Refresh 'status-left' and 'status-right' more often, from every 15s to 5s
set -g status-interval 5

# Upgrade $TERM
set -g default-terminal "screen-256color"

# Emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs

# Focus events enabled for terminals that support them
set -g focus-events on

# Super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# disabled activity monitoring
setw -g monitor-activity off
set -g visual-activity off

# Change window numbering to match keyboard
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on
#set-option -g set-titles on

# Enable mouse
set -g mouse on

# Quick reload of config
unbind R
bind R source-file ~/.config/tmux/tmux.conf; display "Tmux config reloaded"

# Remap prefix
bind C-b
set -g prefix C-s
bind C-s send-prefix

# Windows Split Remap
unbind '"'
bind - split-window -v

unbind %
bind \\ split-window -h

#bind-key X kill-pane

# bind S command-prompt -p "New Session:" "new-session -A -s '%%'
# bind K confirm kill-session
bind-key c command-prompt -p "Name of new window: " "new-window -n '%%'"
# bind-key C command-prompt -p "Name of new session: " "new -s '%%'"

# Switch between windows
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Resize pane shortcuts
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

# Vim-like
bind : command-prompt


# ---------------------------------------------------- COPY PASTE
# -   Normal Mode
#     -   prefix y — copies text from the command line to the clipboard.
#     -   prefix Y — copy the current pane's current working directory to the clipboard.
#
# -   Copy Mode
#     -   y — copy selection to system clipboard.
#     -   Y — "put" selection. Equivalent to copying a selection, and pasting it to the command line.
#

set -g set-clipboard on
bind P choose-buffer

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectable-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

bind-key -T copy-mode-vi Escape send-keys -X cancel
bind-key -T copy-mode-vi H send-keys -X start-of-line
bind-key -T copy-mode-vi L send-keys -X end-of-line

set -g @yank_with_mouse on
unbind p
bind p paste-buffer

# set -g @yank_selection 'primary'
set -g @yank_selection_mouse 'clipboard'
bind -r C-[ copy-mode

# bind p paste-buffer

# ---------------------------------------------------- VIM NAVIGATION
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# ---------------------------------------------------- PLUGINS
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'dreamsofcode-io/catppuccin-tmux'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-sessionist'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
run-shell ~/.config/tmux/plugins/tmux-yank/yank.tmux
run-shell ~/.config/tmux/plugins/catppuccin-tmux/catppuccin.tmux
run-shell ~/.config/tmux/plugins/vim-tmux-navigator/vim-tmux-navigator.tmux
run-shell ~/.config/tmux/plugins/tmux-sessionist/sessionist.tmux

